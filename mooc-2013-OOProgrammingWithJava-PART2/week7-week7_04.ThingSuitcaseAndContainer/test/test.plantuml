@startuml

title __TEST's Class Diagram__\n

  package  {
    class A_ThingTest {
        ~ klassName : String
        ~ klass : ClassRef<Object>
        + setup()
        + classIsPublic()
        + noRedundantVariables()
        + testConstructor()
        + luo()
        + thingGetName()
        + thingGetWeight()
        + thingToString()
        - sisaltaa()
        - saniteettitarkastus()
        - kentta()
    }
  }
  

  package  {
    class B_SuitcaseTest {
        - thingClass : Class
        - thingConstructor : Constructor
        - suitcaseClass : Class
        - suitcaseConstructor : Constructor
        ~ klassName : String
        ~ _SuitcaseRef : ClassRef<_Suitcase>
        ~ _ThingRef : ClassRef<_Thing>
        + setup()
        + classIsPublic()
        + noRedundantVariables()
        + testSuitcaseConstructor()
        + luoM()
        + luoT()
        + addThingMethod()
        + checkAddThing()
        + checkAddThingWhenSuitcaseIsFull()
        + checkAddThingWhenSuitcaseWeightsTheSame()
        + suitcaseToString()
        + suitcaseMoreToString()
        + printThingsMethod()
        + printThingsWorksCorrectly()
        + suitcaseTotalWeightMethod()
        + suitcaseTotalWeightReturnsCorrectValue()
        + heaviestThingTest()
        + heaviestThingFindsTheHeaviestThing()
        + heaviestThingReturnsNullIfEmptySuitcase()
        - sisaltaa()
        - oliomuuttujaLista()
        - saniteettitarkastus()
        - kentta()
    }
  }
  

  package  {
    class C_ContainerTest {
        - thingClass : Class
        - thingConstructor : Constructor
        - thingToString : Method
        - suitcaseClass : Class
        - suitcaseConstructor : Constructor
        - containerClass : Class
        - containerConstructor : Constructor
        ~ klassName : String
        ~ _ContainerRef : ClassRef<_Container>
        ~ _SuitcaseRef : ClassRef<_Suitcase>
        ~ _ThingRef : ClassRef<_Thing>
        + setup()
        + classIsPublic()
        + noRedundantVariables()
        + testContainerConstructor()
        + luoM()
        + luoT()
        + luoL()
        + containerAddSuitcaseMethod()
        + containerIfCantAdd()
        + containerCanAddToMaxWeight()
        + checkPrint()
        + containerPrintThingsMethod()
        + containerCheckPrint()
        + containerCheckPrintWithBricks()
        - lisaaRuumaan()
        - lisaaLaukkuun()
        - luoRuuma()
        - luoSuitcase()
        - luoThing()
        - sisaltaa()
        - oliomuuttujaLista()
        - saniteettitarkastus()
        - kentta()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
